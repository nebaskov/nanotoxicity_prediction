# Generated by Django 3.2.16 on 2023-01-23 14:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='nanoparticle_mri_r1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_doi', models.CharField(max_length=250, verbose_name='Link to article')),
                ('np_core', models.CharField(max_length=50, verbose_name='Chemical formula of core')),
                ('np_shell_1', models.CharField(max_length=50, null=True, verbose_name='Chemical formula of coating')),
                ('av', models.CharField(default='', max_length=250, verbose_name='Area/volume')),
                ('mm', models.CharField(default='', max_length=250, verbose_name='Max(size)/min(size)')),
                ('magnetic_moment', models.CharField(default='', max_length=50, verbose_name='Magnetic moment of core')),
                ('sum_surface_spins', models.CharField(default='', max_length=50, verbose_name='Sum surface spins')),
                ('squid_sat_mag', models.CharField(default='', max_length=50, verbose_name='Saturation magnetization')),
                ('squid_coerc_f', models.CharField(default='', max_length=50, verbose_name='Coercitivity')),
                ('squid_rem_mag', models.CharField(default='', max_length=50, verbose_name='Remanence magnetization')),
                ('neorg_coating_magnetic_moment', models.CharField(default='', max_length=50, verbose_name='Magnetic moment of inorganic coating')),
                ('org_coating_LogP', models.CharField(default='', max_length=50, verbose_name='LogP of organic coating')),
                ('org_coating_HAcceptors', models.CharField(default='', max_length=50, verbose_name='Number of H acceptors of organic coating')),
                ('mri_h_val', models.CharField(default='', max_length=50, verbose_name='Field strength')),
                ('mri_r1', models.CharField(default='', max_length=50, verbose_name='R1')),
                ('mri_r2', models.CharField(default='', max_length=50, verbose_name='R2')),
            ],
            options={
                'verbose_name': 'nanoparticle_mri_r1',
                'verbose_name_plural': 'nanoparticle_mri_r1',
            },
        ),
        migrations.CreateModel(
            name='nanoparticle_mri_r2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_doi', models.CharField(max_length=250, verbose_name='Link to article')),
                ('np_core', models.CharField(max_length=50, verbose_name='Chemical formula of core')),
                ('np_shell_1', models.CharField(max_length=50, null=True, verbose_name='Chemical formula of coating')),
                ('av', models.CharField(default='', max_length=250, verbose_name='Area/volume')),
                ('mm', models.CharField(default='', max_length=250, verbose_name='Max(size)/min(size)')),
                ('magnetic_moment', models.CharField(default='', max_length=50, verbose_name='Magnetic moment of core')),
                ('sum_surface_spins', models.CharField(default='', max_length=50, verbose_name='Sum surface spins')),
                ('squid_sat_mag', models.CharField(default='', max_length=50, verbose_name='Saturation magnetization')),
                ('squid_coerc_f', models.CharField(default='', max_length=50, verbose_name='Coercitivity')),
                ('squid_rem_mag', models.CharField(default='', max_length=50, verbose_name='Remanence magnetization')),
                ('neorg_coating_magnetic_moment', models.CharField(default='', max_length=50, verbose_name='Magnetic moment of inorganic coating')),
                ('org_coating_LogP', models.CharField(default='', max_length=50, verbose_name='LogP of organic coating')),
                ('org_coating_HAcceptors', models.CharField(default='', max_length=50, verbose_name='Number of H acceptors of organic coating')),
                ('mri_h_val', models.CharField(default='', max_length=50, verbose_name='Field strength')),
                ('mri_r2', models.CharField(default='', max_length=50, verbose_name='R2')),
            ],
            options={
                'verbose_name': 'nanoparticle_mri_r2',
                'verbose_name_plural': 'nanoparticle_mri_r2',
            },
        ),
        migrations.CreateModel(
            name='nanoparticle_sar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_doi', models.CharField(max_length=250, verbose_name='Link to article')),
                ('np_core', models.CharField(max_length=50, verbose_name='Chemical formula of core')),
                ('np_shell_1', models.CharField(max_length=50, null=True, verbose_name='Chemical formula of coating')),
                ('conc', models.CharField(default='', max_length=250, verbose_name='Particles concentration')),
                ('av', models.CharField(default='', max_length=250, verbose_name='Area/volume')),
                ('mm', models.CharField(default='', max_length=250, verbose_name='Max(size)/min(size)')),
                ('magnetic_moment', models.CharField(default='', max_length=50, verbose_name='Magnetic moment of core')),
                ('squid_sat_mag', models.CharField(default='', max_length=50, verbose_name='Saturation magnetization')),
                ('squid_coerc_f', models.CharField(default='', max_length=50, verbose_name='Coercitivity')),
                ('squid_rem_mag', models.CharField(default='', max_length=50, verbose_name='Remanence magnetization')),
                ('neorg_coating_magnetic_moment', models.CharField(default='', max_length=50, verbose_name='Magnetic moment of inorganic coating')),
                ('org_coating_LogP', models.CharField(default='', max_length=50, verbose_name='LogP of organic coating')),
                ('org_coating_HAcceptors', models.CharField(default='', max_length=50, verbose_name='Number of H acceptors of organic coating')),
                ('htherm_h_amp', models.CharField(default='', max_length=50, verbose_name='Amplitude of field')),
                ('htherm_h_freq', models.CharField(default='', max_length=50, verbose_name='Frequency of field')),
                ('sar', models.CharField(default='', max_length=50, verbose_name='SAR')),
            ],
            options={
                'verbose_name': 'nanoparticle_sar',
                'verbose_name_plural': 'nanoparticle_sar',
            },
        ),
        migrations.CreateModel(
            name='offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_doi', models.CharField(max_length=250, verbose_name='Link to article')),
                ('np_core', models.CharField(max_length=50, verbose_name='Chemical formula of core')),
                ('np_shell', models.CharField(max_length=50, null=True, verbose_name='Chemical formula of coating')),
                ('shape', models.CharField(default='', max_length=50, verbose_name='shape')),
                ('length', models.CharField(default='', max_length=50, verbose_name='length')),
                ('width', models.CharField(default='', max_length=50, verbose_name='width')),
                ('depth', models.CharField(default='', max_length=50, verbose_name='depth')),
                ('squid_sat_mag', models.CharField(default='', max_length=50, verbose_name='Saturation magnetization')),
                ('squid_coerc_f', models.CharField(default='', max_length=50, verbose_name='Coercitivity')),
                ('squid_rem_mag', models.CharField(default='', max_length=50, verbose_name='Remanence magnetization')),
                ('mri_h_val', models.CharField(default='', max_length=50, verbose_name='Field strength')),
                ('mri_r1', models.CharField(default='', max_length=50, verbose_name='R1')),
                ('mri_r2', models.CharField(default='', max_length=50, verbose_name='R2')),
            ],
            options={
                'verbose_name': 'offer',
                'verbose_name_plural': 'offer',
            },
        ),
    ]
